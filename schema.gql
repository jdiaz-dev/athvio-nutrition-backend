# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddClientPlanCommentDto {
  clientId: String!
  clientPlanId: String!
  commenter: CommenterInput!
  message: String!
}

input AddPlanMealDto {
  ingredients: [IngredientsInput!]!
  macros: MacrosInput!
  planId: String!
  position: Float!
  programId: String!
  recipe: String!
  recipeName: String!
}

input AddProgramPlanDto {
  day: Float!
  planMeals: [MealInput!]
  programId: String!
  week: Float!
}

type Calory {
  _id: ID!
  calories: Float!
  carbs: Float!
  clientId: ID!
  createdAt: DateTime!
  fat: Float!
  isDeleted: String!
  protein: Float!
}

type Client {
  _id: ID!
  birthday: DateTime!
  codeCountry: String!
  createdAt: DateTime!
  email: String!
  firstName: String!
  gender: String!
  groups: [ClientGroup!]!
  height: Float!
  lastName: String!
  limitation: String!
  location: String!
  notes: String!
  phone: String!
  profilePicture: String!
  target: String!
  timezone: String!
  userId: ID!
  weight: Float!
}

type ClientGroup {
  _id: ID!
  createdAt: DateTime!
  isDeleted: String!
  title: String!
  userId: ID!
}

type ClientPlan {
  _id: ID!
  assignedDate: ID!
  clientId: String!
  commentResult: String!
  comments: [Comment!]!
  createdAt: DateTime!
  isDeleted: String!
  planMeals: [Meal!]!
  state: String!
  title: String!
}

type Comment {
  _id: ID!
  commenter: Commenter!
  createdAt: DateTime!
  isDeleted: String!
  message: String!
}

type Commenter {
  commenterId: String!
  createdAt: DateTime!
  type: String!
}

input CommenterInput {
  commenterId: String!
  type: String!
}

input CreateCaloryDto {
  calories: Float!
  carbs: Float!
  clientId: String!
  fat: Float!
  protein: Float!
}

input CreateClientDto {
  birthday: DateTime!
  codeCountry: String!
  email: String!
  firstName: String!
  gender: String!
  height: Float!
  lastName: String!
  limitation: String!
  location: String!
  notes: String!
  phone: String!
  profilePicture: String!
  target: String!
  timezone: String!
  weight: Float!
}

input CreateClientGroupDto {
  title: String!
}

input CreateClientPlanDto {
  assignedDate: DateTime!
  clientId: String!
  planMeals: [MealInput!]
  title: String
}

input CreateCustomMealDto {
  ingredients: [IngredientInput!]!
  name: String!
  recipe: String!
}

input CreateProgramDto {
  description: String!
  name: String!
}

input CreateProgramTagDto {
  title: String!
}

input CreateUserDto {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

type CustomMeal {
  _id: ID!
  createdAt: DateTime!
  ingredients: [Ingredient!]!
  isDeleted: String!
  name: String!
  recipe: String!
  userId: ID!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteClientGroupDto {
  clientGropId: String!
}

input DeleteClientPlanCommentDto {
  clientId: String!
  clientPlanId: String!
  commentId: String!
}

input DeleteClientPlanDto {
  clientId: String!
  clientPlanId: String!
}

input DeleteCustomMealDto {
  customMealId: String!
}

input DeletePlanMealDto {
  mealId: String!
  planId: String!
  programId: String!
}

input DeleteProgramDto {
  programId: String!
}

input DeleteProgramPlanDto {
  planId: String!
  programId: String!
}

input DeleteProgramTagDto {
  programTagId: String!
}

input GetCaloryDto {
  caloryId: String!
  clientId: String!
}

input GetClientPlansDto {
  clientId: String!
  limit: Float = 30
  offset: Float = 0
  orderBy: String
  search: String
}

input GetClientsDto {
  limit: Float = 30
  offset: Float = 0
  orderBy: String
  search: String
  state: String!
}

input GetCustomMealDto {
  customMealId: String!
}

input GetCustomMealsDto {
  limit: Float = 30
  offset: Float = 0
  orderBy: String
  search: String
}

input GetProgramDto {
  programId: String!
}

input GetProgramsDto {
  limit: Float = 30
  offset: Float = 0
  orderBy: String
  search: String
}

type Ingredient {
  amount: Float!
  ingredientName: String!
  unit: Float!
}

input IngredientInput {
  amount: Float!
  name: String!
  unit: String!
}

input IngredientsInput {
  amount: Float!
  ingredientName: String!
  unit: String!
}

type JwtDto {
  token: String!
  userId: String!
}

input LoginDto {
  email: String!
  password: String!
}

type Macros {
  calories: Float!
  carbs: Float!
  fat: Float!
  protein: Float!
}

input MacrosInput {
  calories: Float!
  carbs: Float!
  fat: Float!
  protein: Float!
}

input ManageClientGroupDto {
  action: String!
  clientId: String!
  groupId: String!
}

input ManageClientStateDto {
  clientId: String!
  state: String!
}

input ManageProgramTagDto {
  action: String!
  programId: String!
  programTagId: String!
}

type Meal {
  _id: ID!
  ingredients: [Ingredient!]!
  macros: Macros!
  position: Float!
  recipe: String!
  recipeName: String!
  tagFood: String!
}

input MealInput {
  ingredients: [IngredientsInput!]!
  macros: MacrosInput!
  recipe: String!
  recipeName: String!
}

type Mutation {
  addClientPlanComment(input: AddClientPlanCommentDto!): ClientPlan!
  addProgramPlan(input: AddProgramPlanDto!): Program!
  createCalory(input: CreateCaloryDto!): Calory!
  createClient(input: CreateClientDto!): Client!
  createClientGroup(input: CreateClientGroupDto!): ClientGroup!
  createClientPlan(input: CreateClientPlanDto!): ClientPlan!
  createCustomMeal(input: CreateCustomMealDto!): CustomMeal!
  createPlanMeal(input: AddPlanMealDto!): Program!
  createProgram(input: CreateProgramDto!): Program!
  createProgramTag(input: CreateProgramTagDto!): ProgramTag!
  createUser(input: CreateUserDto!): User!
  deleteClientGroup(input: DeleteClientGroupDto!): ClientGroup!
  deleteClientPlan(input: DeleteClientPlanDto!): ClientPlan!
  deleteClientPlanComment(input: DeleteClientPlanCommentDto!): ClientPlan!
  deleteCustomMeal(input: DeleteCustomMealDto!): CustomMeal!
  deletePlanMeal(input: DeletePlanMealDto!): Program!
  deleteProgram(input: DeleteProgramDto!): Program!
  deleteProgramPlan(input: DeleteProgramPlanDto!): Program!
  deleteProgramTag(input: DeleteProgramTagDto!): ProgramTag!
  logIn(input: LoginDto!): JwtDto!
  manageClientGroup(input: ManageClientGroupDto!): Client!
  manageClientState(input: ManageClientStateDto!): Client!
  manageProgramTag(input: ManageProgramTagDto!): Program!
  updateCalory(input: UpdateCaloryDto!): Calory!
  updateClient(input: UpdateClientDto!): Client!
  updateClientGroup(input: UpdateClientGroupDto!): ClientGroup!
  updateClientPlan(input: UpdateClientPlanDto!): ClientPlan!
  updateClientPlanComment(input: UpdateClientPlanCommentDto!): ClientPlan!
  updateClientPlanDate(input: UpdateClientPlanDateDto!): ClientPlan!
  updateCustomMeal(input: UpdateCustomMealDto!): CustomMeal!
  updatePlanMeal(input: UpdateMealDto!): Program!
  updateProgram(input: UpdateProgramDto!): Program!
  updateProgramPlan(input: UpdateProgramPlanDto!): Program!
  updateProgramTag(input: UpdateProgramTagDto!): ProgramTag!
}

type Plan {
  _id: ID!
  day: Float!
  isDeleted: Boolean!
  planMeals: [Meal!]!
  title: String!
  week: Float!
}

type Program {
  _id: ID!
  clients: [String!]!
  createdAt: DateTime!
  description: String!
  name: String!
  plans: [Plan!]!
  tags: [ProgramTag!]!
  userId: ID!
}

type ProgramTag {
  _id: ID!
  createdAt: DateTime!
  isDeleted: String!
  title: String!
  userId: ID!
}

type Query {
  getCalory(input: GetCaloryDto!): [Calory!]!
  getClientGroups: [ClientGroup!]!
  getClientPlans(input: GetClientPlansDto!): [ClientPlan!]!
  getClients(input: GetClientsDto!): [Client!]!
  getCustomMeal(input: GetCustomMealDto!): CustomMeal!
  getCustomMeals(input: GetCustomMealsDto!): [CustomMeal!]!
  getProgram(input: GetProgramDto!): Program!
  getProgramTags: [ProgramTag!]!
  getPrograms(input: GetProgramsDto!): [Program!]!
  sayHello: String!
}

input UpdateCaloryDto {
  calories: Float!
  caloryId: String!
  carbs: Float!
  clientId: String!
  fat: Float!
  protein: Float!
}

input UpdateClientDto {
  birthday: DateTime!
  clientId: String!
  codeCountry: String!
  email: String!
  firstName: String!
  gender: String!
  height: Float!
  lastName: String!
  limitation: String!
  location: String!
  notes: String!
  phone: String!
  profilePicture: String!
  target: String!
  timezone: String!
  weight: Float!
}

input UpdateClientGroupDto {
  clientGroupId: String!
  title: String!
}

input UpdateClientPlanCommentDto {
  clientId: String!
  clientPlanId: String!
  commentId: String!
  message: String!
}

input UpdateClientPlanDateDto {
  assignedDate: DateTime!
  clientId: String!
  clientPlanId: String!
}

input UpdateClientPlanDto {
  assignedDate: DateTime!
  clientId: String!
  clientPlanId: String!
  planMeals: [MealInput!]
  title: String
}

input UpdateCustomMealDto {
  customMealId: String!
  ingredients: [IngredientInput!]!
  name: String!
  recipe: String!
}

input UpdateMealDto {
  ingredients: [IngredientsInput!]!
  macros: MacrosInput!
  mealId: String!
  planId: String!
  position: Float!
  programId: String!
  recipe: String!
  recipeName: String!
}

input UpdateProgramDto {
  description: String!
  name: String!
  programId: String!
}

input UpdateProgramPlanDto {
  day: Float!
  planId: String!
  programId: String!
  week: Float!
}

input UpdateProgramTagDto {
  programTagId: String!
  title: String!
}

type User {
  createdAt: DateTime!
  email: String!
  firstName: String!
  image: String!
  isDarkMode: Boolean!
  lastName: String!
  userId: ID!
}